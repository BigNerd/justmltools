# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# Customized to also publish to PyPi

name: Build and Publish

on:
  push:
    branches: [ master ]
    tags:
      - '*'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Perform unit tests
      run: |
        python -m unittest discover
    - name: Install setuptools and wheel
      run: >-
        python3 -m
        pip install
        --user
        --upgrade
        setuptools
        wheel
    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Write the version
      if: startsWith(github.event.ref, 'refs/tags')
      id: write_version
      run: |
        echo ${{ steps.get_version.outputs.VERSION }} > version.txt
        cat version.txt
    - name: Build a source tarball and a binary wheel
      run: >-
        python3
        setup.py
        sdist
        bdist_wheel
    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_TEST_UPLOAD_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution to PyPI
      if: startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_UPLOAD_TOKEN }}
